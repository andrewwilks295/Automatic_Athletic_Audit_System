# Generated by Django 5.1.5 on 2025-04-10 02:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=8)),
                ('course_number', models.CharField(max_length=8)),
                ('course_name', models.CharField(max_length=255)),
                ('credits', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MajorMapping',
            fields=[
                ('major_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('major_name_web', models.CharField(max_length=255, unique=True)),
                ('major_name_registrar', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAudit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.IntegerField()),
                ('total_credits', models.IntegerField()),
                ('major_credits', models.IntegerField()),
                ('ptc_major', models.DecimalField(decimal_places=2, max_digits=5)),
                ('eligible', models.BooleanField()),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequirementGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('group_type', models.CharField(choices=[('credits', 'Complete X Credits'), ('choose', 'Choose One Path')], max_length=32)),
                ('required_credits', models.IntegerField(blank=True, null=True)),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_groups', to='src.majormapping')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementSubgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('required_credits', models.IntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subgroups', to='src.requirementgroup')),
            ],
        ),
        migrations.CreateModel(
            name='StudentGroupResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satisfied', models.BooleanField()),
                ('audit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.studentaudit')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.requirementgroup')),
                ('selected_subgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='src.requirementsubgroup')),
            ],
        ),
        migrations.CreateModel(
            name='StudentRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('student_id', models.IntegerField()),
                ('high_school_grad', models.IntegerField()),
                ('first_term', models.IntegerField()),
                ('term', models.IntegerField()),
                ('grade', models.CharField(max_length=2)),
                ('credits', models.IntegerField()),
                ('course_attributes', models.CharField(blank=True, max_length=255, null=True)),
                ('institution', models.CharField(max_length=255)),
                ('student_attributes', models.BigIntegerField(blank=True, null=True)),
                ('counts_toward_major', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.course')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMajor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catalog_year', models.IntegerField()),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.majormapping')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.studentrecord')),
            ],
        ),
        migrations.AddField(
            model_name='studentaudit',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.studentrecord'),
        ),
        migrations.CreateModel(
            name='MajorCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='src.course')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='src.requirementgroup')),
                ('subgroup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='src.requirementsubgroup')),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('group__isnull', False), ('subgroup__isnull', True)), models.Q(('group__isnull', True), ('subgroup__isnull', False)), _connector='OR'), name='majorcourse_group_xor_subgroup')],
                'unique_together': {('course', 'group', 'subgroup')},
            },
        ),
        migrations.AddIndex(
            model_name='studentrecord',
            index=models.Index(fields=['student_id'], name='src_student_student_7ad857_idx'),
        ),
        migrations.AddIndex(
            model_name='studentrecord',
            index=models.Index(fields=['term'], name='src_student_term_f5a6d8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='studentmajor',
            unique_together={('student', 'major')},
        ),
        migrations.AlterUniqueTogether(
            name='studentaudit',
            unique_together={('student', 'term')},
        ),
    ]
